"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Grid_1 = require("@material-ui/core/Grid");
var classnames_1 = require("classnames");
var ChipStatus_1 = require("../chipstatus/ChipStatus");
var TextPlaceholderWithTruncation_1 = require("../textplaceholderwithtruncation/TextPlaceholderWithTruncation");
var TextPlaceholder_1 = require("../textplaceholder/TextPlaceholder");
var Timestamp_1 = require("../timestamps/Timestamp");
var tile_1 = require("../tile");
var ContentType_1 = require("../contenttype/ContentType");
var LogoItem_1 = require("../logoitem/LogoItem");
var s = require("./ContentCardGeneric.css");
var ContentCardGeneric = (function (_super) {
    __extends(ContentCardGeneric, _super);
    function ContentCardGeneric() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContentCardGeneric.prototype.render = function () {
        var _a = this.props, title = _a.title, statusText = _a.statusText, type = _a.type, statusType = _a.statusType, source = _a.source, systemOrigin = _a.systemOrigin, ingestionDate = _a.ingestionDate, typePlaceholder = _a.typePlaceholder, ingestionDateLocale = _a.ingestionDateLocale, ingestionDateFormat = _a.ingestionDateFormat;
        return (React.createElement(tile_1.default, { size: tile_1.ETileSize.FULL },
            React.createElement(Grid_1.default, { container: true, spacing: 24, className: classnames_1.default(s.gridContainer, s.gridParent) },
                React.createElement(Grid_1.default, { item: true, xs: 12, md: 6, className: classnames_1.default(s.gridItem, s.gridChild) },
                    React.createElement(Grid_1.default, { container: true, spacing: 24, className: s.gridContainer },
                        React.createElement(Grid_1.default, { item: true, xs: 12, sm: 3, className: s.gridItem },
                            React.createElement(ContentType_1.default, { type: type, placeholder: typePlaceholder })),
                        React.createElement(Grid_1.default, { item: true, xs: 12, sm: 9, className: s.gridItem },
                            React.createElement(TextPlaceholderWithTruncation_1.default, { lines: 1, align: 'left' }, title)))),
                React.createElement(Grid_1.default, { item: true, xs: 12, md: 6, className: classnames_1.default(s.gridItem, s.gridChild) },
                    React.createElement(Grid_1.default, { container: true, spacing: 24, className: s.gridContainer },
                        React.createElement(Grid_1.default, { item: true, xs: 12, sm: 3, className: s.gridItem },
                            React.createElement(LogoItem_1.default, { src: source, width: 50 })),
                        React.createElement(Grid_1.default, { item: true, xs: 12, sm: 3, className: s.gridItem },
                            React.createElement(TextPlaceholder_1.default, null, systemOrigin)),
                        React.createElement(Grid_1.default, { item: true, xs: 12, sm: 3, className: s.gridItem },
                            React.createElement(Timestamp_1.default, { format: ingestionDateFormat, locale: ingestionDateLocale }, ingestionDate)),
                        React.createElement(Grid_1.default, { item: true, xs: 12, sm: 3, className: s.gridItem },
                            React.createElement(ChipStatus_1.default, { status: statusType, placeholder: statusText })))))));
    };
    return ContentCardGeneric;
}(React.PureComponent));
exports.default = ContentCardGeneric;
//# sourceMappingURL=ContentCardGeneric.js.map